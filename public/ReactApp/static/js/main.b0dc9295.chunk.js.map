{"version":3,"sources":["assets/images/slide2.jpg","assets/images/slide1.jpeg","assets/images/earth.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","state","slide1","slide2","slide3","slide4","slide5","nr","style","display","index","select1","select2","select3","select4","select5","this","setState","Carousel","controls","indicators","fade","interval","activeIndex","onSelect","selectedIndex","Item","className","src","earth","alt","Caption","id","Form","Group","controlId","Label","Control","as","onChange","e","target","value","size","Button","variant","block","onClick","alert","params","particles","number","line_linked","enable","shadow","color","blur","random","anim","speed","sync","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","checkButton","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b0dc9295.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/slide2.dfc58575.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide1.ccf27964.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/earth.de9f1a11.jpg\";","import React, { Component } from \"react\";\r\nimport { Carousel, Button, Form } from \"react-bootstrap\";\r\nimport \"./App.css\";\r\nimport Particles from \"react-particles-js\";\r\nimport slide2 from \"./assets/images/slide2.jpg\";\r\nimport earth from \"./assets/images/earth.jpg\";\r\nimport slide1 from \"./assets/images/slide1.jpeg\";\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      slide1: \"\",\r\n      slide2: \"\",\r\n      slide3: \"\",\r\n      slide4: \"\",\r\n      slide5: \"\",\r\n      nr: 0,\r\n      style: { display: \"none\" },\r\n      index: 0,\r\n      select1: { display: \"block\" },\r\n      select2: { display: \"block\" },\r\n      select3: { display: \"block\" },\r\n      select4: { display: \"block\" },\r\n      select5: { display: \"block\" }\r\n    };\r\n  }\r\n\r\n  checkButton() {\r\n    if (this.state.nr === 4) this.setState({ style: { display: \"block\" } });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Carousel\r\n        controls={false}\r\n        indicators={false}\r\n        fade={false}\r\n        interval={null}\r\n        activeIndex={this.state.index}\r\n        onSelect={selectedIndex => {\r\n          this.setState({\r\n            index: selectedIndex\r\n          });\r\n        }}\r\n      >\r\n        <Carousel.Item>\r\n          <img className=\"d-block w-100 slide\" src={earth} alt=\"First slide\" />\r\n          <Carousel.Caption className=\"carousel-caption\">\r\n            <div className=\"row\" id=\"r1\">\r\n              <div className=\"col-6\">\r\n                <Form>\r\n                  <Form.Group controlId=\"exampleForm.SelectCustomSizeLg\">\r\n                    <div className=\"row\" id=\"r12\">\r\n                      <div className=\"col-9\">\r\n                        <Form.Label className=\"labelForm\">\r\n                          Question 1\r\n                        </Form.Label>\r\n                      </div>\r\n                    </div>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      onChange={e => {\r\n                        this.setState({\r\n                          slide1: e.target.value,\r\n                          nr: this.state.nr + 1,\r\n                          index: this.state.index + 1,\r\n                          select1: { display: \"none\" }\r\n                        });\r\n                      }}\r\n                      size=\"lg\"\r\n                    >\r\n                      <option style={this.state.select1}>\r\n                        Select your choice\r\n                      </option>\r\n                      <option>A.</option>\r\n                      <option>B.</option>\r\n                      <option>C.</option>\r\n                      <option>D.</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\" id=\"r2\">\r\n              <div className=\"col-9\">\r\n                <p className=\"descriptionSlide\">First slide text</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\" id=\"r3\">\r\n              <div className=\"col-6\">\r\n                <Button\r\n                  variant=\"success\"\r\n                  size=\"lg\"\r\n                  block\r\n                  style={this.state.style}\r\n                  onClick={() => {\r\n                    alert(\"Contrats!\\nYou have added a new project!\");\r\n                  }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <Particles\r\n              params={{\r\n                particles: {\r\n                  number: {\r\n                    value: 50\r\n                  },\r\n                  line_linked: {\r\n                    enable: false,\r\n                    shadow: {\r\n                      enable: true,\r\n                      color: \"#3CA9D1\",\r\n                      blur: 10\r\n                    }\r\n                  },\r\n                  size: {\r\n                    value: 1,\r\n                    random: false,\r\n                    anim: {\r\n                      enable: false,\r\n                      speed: 80,\r\n                      sync: false\r\n                    }\r\n                  },\r\n                  move: {\r\n                    enable: true,\r\n                    speed: 5,\r\n                    direction: \"none\",\r\n                    random: false,\r\n                    straight: false,\r\n                    out_mode: \"out\",\r\n                    bounce: false,\r\n                    attract: {\r\n                      enable: false,\r\n                      rotateX: 600,\r\n                      rotateY: 1200\r\n                    }\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img className=\"d-block w-100 slide\" src={slide2} alt=\"First slide\" />\r\n          <Carousel.Caption className=\"carousel-caption\">\r\n            <div className=\"row\" id=\"r1\">\r\n              <div className=\"col-6\">\r\n                <Form>\r\n                  <Form.Group controlId=\"exampleForm.SelectCustomSizeLg\">\r\n                    <div className=\"row\" id=\"r12\">\r\n                      <div className=\"col-9\">\r\n                        <Form.Label className=\"labelForm\">\r\n                          Question 2\r\n                        </Form.Label>\r\n                      </div>\r\n                    </div>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      onChange={e => {\r\n                        this.setState({\r\n                          slide2: e.target.value,\r\n                          nr: this.state.nr + 1,\r\n                          index: this.state.index + 1,\r\n                          select2: { display: \"none\" }\r\n                        });\r\n                      }}\r\n                      size=\"lg\"\r\n                    >\r\n                      <option style={this.state.select2}>\r\n                        Select your choice\r\n                      </option>\r\n                      <option>A.</option>\r\n                      <option>B.</option>\r\n                      <option>C.</option>\r\n                      <option>D.</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\" id=\"r2\">\r\n              <div className=\"col-9\">\r\n                <p className=\"descriptionSlide\">Second slide text</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\" id=\"r3\">\r\n              <div className=\"col-6\">\r\n                <Button\r\n                  variant=\"success\"\r\n                  size=\"lg\"\r\n                  block\r\n                  style={this.state.style}\r\n                  onClick={() => {\r\n                    alert(\"Contrats!\\nYou have added a new project!\");\r\n                  }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img className=\"d-block w-100 slide\" src={slide1} alt=\"First slide\" />\r\n          <Carousel.Caption className=\"carousel-caption\">\r\n            <div className=\"row\" id=\"r1\">\r\n              <div className=\"col-6\">\r\n                <Form>\r\n                  <Form.Group controlId=\"exampleForm.SelectCustomSizeLg\">\r\n                    <div className=\"row\" id=\"r12\">\r\n                      <div className=\"col-9\">\r\n                        <Form.Label className=\"labelForm\">\r\n                          Question 3\r\n                        </Form.Label>\r\n                      </div>\r\n                    </div>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      onChange={e => {\r\n                        this.setState({\r\n                          slide3: e.target.value,\r\n                          nr: this.state.nr + 1,\r\n                          index: this.state.index + 1,\r\n                          select3: { display: \"none\" }\r\n                        });\r\n                      }}\r\n                      size=\"lg\"\r\n                    >\r\n                      <option style={this.state.select3}>\r\n                        Select your choice\r\n                      </option>\r\n                      <option>A.</option>\r\n                      <option>B.</option>\r\n                      <option>C.</option>\r\n                      <option>D.</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\" id=\"r2\">\r\n              <div className=\"col-9\">\r\n                <p className=\"descriptionSlide\">Third slide text</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\" id=\"r3\">\r\n              <div className=\"col-6\">\r\n                <Button\r\n                  variant=\"success\"\r\n                  size=\"lg\"\r\n                  block\r\n                  style={this.state.style}\r\n                  onClick={() => {\r\n                    alert(\"Contrats!\\nYou have added a new project!\");\r\n                  }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img className=\"d-block w-100 slide\" src={slide2} alt=\"First slide\" />\r\n          <Carousel.Caption className=\"carousel-caption\">\r\n            <div className=\"row\" id=\"r1\">\r\n              <div className=\"col-6\">\r\n                <Form>\r\n                  <Form.Group controlId=\"exampleForm.SelectCustomSizeLg\">\r\n                    <div className=\"row\" id=\"r12\">\r\n                      <div className=\"col-9\">\r\n                        <Form.Label className=\"labelForm\">\r\n                          Question 4\r\n                        </Form.Label>\r\n                      </div>\r\n                    </div>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      onChange={e => {\r\n                        this.setState({\r\n                          slide4: e.target.value,\r\n                          nr: this.state.nr + 1,\r\n                          index: this.state.index + 1,\r\n                          select4: { display: \"none\" }\r\n                        });\r\n                      }}\r\n                      size=\"lg\"\r\n                    >\r\n                      <option style={this.state.select4}>\r\n                        Select your choice\r\n                      </option>\r\n                      <option>A.</option>\r\n                      <option>B.</option>\r\n                      <option>C.</option>\r\n                      <option>D.</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\" id=\"r2\">\r\n              <div className=\"col-9\">\r\n                <p className=\"descriptionSlide\">Fourth slide text</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\" id=\"r3\">\r\n              <div className=\"col-6\">\r\n                <Button\r\n                  variant=\"success\"\r\n                  size=\"lg\"\r\n                  block\r\n                  style={this.state.style}\r\n                  onClick={() => {\r\n                    alert(\"Contrats!\\nYou have added a new project!\");\r\n                  }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img className=\"d-block w-100 slide\" src={slide1} alt=\"First slide\" />\r\n          <Carousel.Caption className=\"carousel-caption\">\r\n            <div className=\"row\" id=\"r1\">\r\n              <div className=\"col-6\">\r\n                <Form>\r\n                  <Form.Group controlId=\"exampleForm.SelectCustomSizeLg\">\r\n                    <div className=\"row\" id=\"r12\">\r\n                      <div className=\"col-9\">\r\n                        <Form.Label className=\"labelForm\">\r\n                          Question 5\r\n                        </Form.Label>\r\n                      </div>\r\n                    </div>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      onChange={e => {\r\n                        this.setState({\r\n                          slide5: e.target.value,\r\n                          nr: this.state.nr + 1,\r\n                          index: this.state.index + 1,\r\n                          select5: { display: \"none\" }\r\n                        });\r\n                        this.checkButton();\r\n                      }}\r\n                      size=\"lg\"\r\n                    >\r\n                      <option style={this.state.select5}>\r\n                        Select your choice\r\n                      </option>\r\n                      <option>A.</option>\r\n                      <option>B.</option>\r\n                      <option>C.</option>\r\n                      <option>D.</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\" id=\"r2\">\r\n              <div className=\"col-9\">\r\n                <p className=\"descriptionSlide\">Fifth slide text</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\" id=\"r3\">\r\n              <div className=\"col-6\">\r\n                <Button\r\n                  variant=\"success\"\r\n                  size=\"lg\"\r\n                  block\r\n                  style={this.state.style}\r\n                  onClick={() => {\r\n                    alert(\"Contrats!\\nYou have added a new project!\");\r\n                  }}\r\n                >\r\n                  Submit\r\n                </Button>\r\n                <Button\r\n                  variant=\"info\"\r\n                  size=\"lg\"\r\n                  block\r\n                  style={this.state.style}\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      index: 0\r\n                    })\r\n                  }\r\n                >\r\n                  Re-elect\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}